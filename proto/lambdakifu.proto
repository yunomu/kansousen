syntax = "proto3";

package lambdakifu;

option go_package = "proto/lambdakifu";

message GetKifuInput {
  string user_id = 1;
  string kifu_id = 2;
}

message Pos {
  int32 x = 1;
  int32 y = 2;
}

message Piece {
  enum Id {
    NULL = 0;
    GYOKU = 1;
    HISHA = 2;
    RYU = 3;
    KAKU = 4;
    UMA = 5;
    KIN = 6;
    GIN = 7;
    NARI_GIN = 8;
    KEI = 9;
    NARI_KEI = 10;
    KYOU = 11;
    NARI_KYOU = 12;
    FU = 13;
    TO = 14;
  }
}

message FinishedStatus {
  enum Id {
    NOT_FINISHED = 0;
    SUSPEND = 1;
    SURRENDER = 2;
    DRAW = 3;
    REPETITION_DRAW = 4;
    CHECKMATE = 5;
    OVER_TIME_LIMIT = 6;
    FOUL_LOSS = 7;
    FOUL_WIN = 8;
    NYUGYOKU_WIN = 9;
  }
}

message Value {
  string name = 1;
  string value = 2;
}

message GetKifuOutput {
  string user_id = 1;
  string kifu_id = 2;

  int64 start_ts = 3;
  int64 end_ts = 4;
  string handicap = 5;
  string game_name = 6;
  message Player {
    string name = 1;
    string note = 2;
  }
  repeated Player first_players = 7;
  repeated Player second_players = 8;
  repeated Value other_fields = 9;
  string sfen = 10;
  int64 created_ts = 11;
  message Step {
    int32 seq = 1;
    string position = 2;
    Pos src = 3;
    Pos dst = 4;
    Piece.Id piece = 5;
    FinishedStatus.Id finished_status = 6;
    bool promoted = 7;
    Piece.Id captured = 8;
    int32 timestamp_sec = 9;
    int32 thinking_sec = 10;
    repeated string notes = 11;
  }
  repeated Step steps = 12;
  string note = 13;
}

message RecentKifuInput {
  string user_id = 1;
  int32 limit = 2;
}

message RecentKifuOutput {
  message Kifu {
    string user_id = 1;
    string kifu_id = 2;
    int64 start_ts = 3;

    string handicap = 4;
    string game_name = 5;
    repeated string first_players = 6;
    repeated string second_players = 7;
    string note = 8;
  }
  repeated Kifu kifus = 1;
}

message PostKifuInput {
  string user_id = 1;
  string payload = 2;

  enum Format {
    KIF = 0;
  }
  Format format = 3;

  enum Encoding {
    UTF8 = 0;
    SHIFT_JIS = 1;
  }
  Encoding encoding = 4;
}

message PostKifuOutput {
  string kifu_id = 1;
}

message DeleteKifuInput {
  string user_id = 1;
  string kifu_id = 2;
}

message DeleteKifuOutput {
}


message GetSamePositionsInput {
  string user_id = 1;
  string position = 2;
  int32 steps = 3;
  repeated string exclude_kifu_ids = 4;
}

message GetSamePositionsOutput {
  string position = 1;

  message Step {
    int32 seq = 1;
    Pos src = 2;
    Pos dst = 3;
    Piece.Id piece = 4;
    bool promoted = 5;
    FinishedStatus.Id finished_status = 6;
  }
  message Phase {
    string user_id = 1;
    string kifu_id = 2;
    int32 seq = 3;

    repeated Step steps = 4;
  }
  repeated Phase phases = 2;
}

message Input {
  oneof select {
    RecentKifuInput recent_kifu_input = 1;
    PostKifuInput post_kifu_input = 2;
    DeleteKifuInput delete_kifu_input = 3;
    GetKifuInput get_kifu_input = 4;
    GetSamePositionsInput get_same_positions_input = 5;
  }
}


message Output {
  oneof select {
    RecentKifuOutput recent_kifu_output = 1;
    PostKifuOutput post_kifu_output = 2;
    DeleteKifuOutput delete_kifu_output = 3;
    GetKifuOutput get_kifu_output = 4;
    GetSamePositionsOutput get_same_positions_output = 5;
  }
}
