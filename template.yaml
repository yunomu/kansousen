AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  kansousen

Globals:
  Function:
    Timeout: 5

Parameters:
  Stage:
    Type: String
  ApiDomainName:
    Type: String
  Certificate:
    Type: String
  CognitoUserPool:
    Type: String
  CognitoUserPoolClient:
    Type: String

Resources:
  KansousenTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: kifuId
          AttributeType: S
        - AttributeName: var
          AttributeType: S
        - AttributeName: userId
          AttributeType: S
        - AttributeName: createdTs
          AttributeType: N
        - AttributeName: startTs
          AttributeType: N
        - AttributeName: sfen
          AttributeType: S
        - AttributeName: pos
          AttributeType: S
      KeySchema:
        - AttributeName: kifuId
          KeyType: HASH
        - AttributeName: var
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: Created
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: createdTs
              KeyType: RANGE
          Projection:
            ProjectionType: INCLUDE
            NonKeyAttributes:
              - kifu
              - version
        - IndexName: Start
          KeySchema:
            - AttributeName: userId
              KeyType: HASH
            - AttributeName: startTs
              KeyType: RANGE
          Projection:
            ProjectionType: INCLUDE
            NonKeyAttributes:
              - kifu
              - version
        - IndexName: Sfen
          KeySchema:
            - AttributeName: sfen
              KeyType: HASH
            - AttributeName: userId
              KeyType: RANGE
          Projection:
            ProjectionType: KEYS_ONLY
        - IndexName: Position
          KeySchema:
            - AttributeName: pos
              KeyType: HASH
          Projection:
            ProjectionType: INCLUDE
            NonKeyAttributes:
              - userId
              - seq

  KansousenTablePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - dynamodb:GetItem
              - dynamodb:BatchGetItem
              - dynamodb:Query
              - dynamodb:DescribeTable
              - dynamodb:PutItem
              - dynamodb:BatchWriteItem
              - dynamodb:DeleteItem
            Resource:
              - !GetAtt KansousenTable.Arn
              - !Sub
                - "${TableARN}/index/*"
                - { TableARN: !GetAtt KansousenTable.Arn }

  KifuFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda/kifu
      Handler: kifu
      Runtime: go1.x
      Policies: !Ref KansousenTablePolicy
      Environment:
        Variables:
          REGION: !Ref AWS::Region
          KIFU_TABLE: !Ref KansousenTable

  KifuApiV2:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: !Ref Stage
      CorsConfiguration:
        AllowHeaders:
          - Content-Type
          - Authorization
        AllowMethods:
          - POST
          - GET
          - OPTIONS
        AllowOrigins:
          - '*'
      Domain:
        DomainName: !Ref ApiDomainName
        BasePath: /v1
        CertificateArn: !Ref Certificate
        SecurityPolicy: TLS_1_2
        EndpointConfiguration: REGIONAL
      Auth:
        Authorizers:
          OAuth2Authorizer:
            IdentitySource: '$request.header.Authorization'
            JwtConfiguration:
              audience:
                - !Ref CognitoUserPoolClient
              issuer: !Sub "https://cognito-idp.${AWS::Region}.amazonaws.com/${CognitoUserPool}"
        DefaultAuthorizer: OAuth2Authorizer

  KifuApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/kifu
      Handler: kifu
      Runtime: go1.x
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource: !GetAtt KifuFunction.Arn
      Environment:
        Variables:
          REGION: !Ref AWS::Region
          KIFU_FUNCTION: !GetAtt KifuFunction.Arn
          BASE_PATH: !Sub "/${Stage}"
      Events:
        KifuApiEvent:
          Type: HttpApi
          Properties:
            ApiId: !Ref KifuApiV2

  HealthApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/ok
      Handler: ok
      Runtime: go1.x
      Policies: !Ref KansousenTablePolicy
      Environment:
        Variables:
          REGION: !Ref AWS::Region
          TABLE_NAME: !Ref KansousenTable
          BASE_PATH: !Sub "/${Stage}"
      Events:
        HealthApiEvent:
          Type: HttpApi
          Properties:
            Path: /ok
            Method: GET
            ApiId: !Ref KifuApiV2
            Auth:
              Authorizer: NONE

  KifuApiV3:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: !Ref Stage
      CorsConfiguration:
        AllowHeaders:
          - Content-Type
          - Authorization
        AllowMethods:
          - POST
          - GET
          - OPTIONS
        AllowOrigins:
          - '*'
      Domain:
        DomainName: !Ref ApiDomainName
        BasePath: /v3
        CertificateArn: !Ref Certificate
        SecurityPolicy: TLS_1_2
        EndpointConfiguration: REGIONAL
      Auth:
        Authorizers:
          OAuth2Authorizer:
            IdentitySource: '$request.header.Authorization'
            JwtConfiguration:
              audience:
                - !Ref CognitoUserPoolClient
              issuer: !Sub "https://cognito-idp.${AWS::Region}.amazonaws.com/${CognitoUserPool}"
        DefaultAuthorizer: OAuth2Authorizer

  KifuApiV3Function:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: api/kifuv3
      Handler: kifuv3
      Runtime: go1.x
      Policies: !Ref KansousenTablePolicy
      Environment:
        Variables:
          REGION: !Ref AWS::Region
          KIFU_TABLE: !Ref KansousenTable
      Events:
        SearchKifu:
          Type: HttpApi
          Properties:
            Method: GET
            Path: /kifus
            ApiId: !Ref KifuApiV3
        PostKifu:
          Type: HttpApi
          Properties:
            Method: POST
            Path: /kifus
            ApiId: !Ref KifuApiV3
        GetKifu:
          Type: HttpApi
          Properties:
            Method: GET
            Path: /kifus/{kifuId}
            ApiId: !Ref KifuApiV3
        PutKifu:
          Type: HttpApi
          Properties:
            Method: PUT
            Path: /kifus/{kifuId}
            ApiId: !Ref KifuApiV3
        DeleteKifu:
          Type: HttpApi
          Properties:
            Method: DELETE
            Path: /kifus/{kifuId}
            ApiId: !Ref KifuApiV3

Outputs:
  Region:
    Description: "Region"
    Value: !Ref AWS::Region
  StackName:
    Description: "StackName"
    Value: !Ref AWS::StackName
  KifuTable:
    Description: "Table name for Kifu"
    Value: !Ref KansousenTable
  ApiRegionalDomainName:
    Description: "Set CNAME record"
    Value: !GetAtt KifuApiV2.DomainName.RegionalDomainName
